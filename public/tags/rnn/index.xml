<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Rnn on Jarvis&#39; Log</title>
    <link>http://localhost:1313/tags/rnn/</link>
    <description>Recent content in Rnn on Jarvis&#39; Log</description>
    <generator>Hugo -- 0.134.1</generator>
    <language>en</language>
    <lastBuildDate>Sat, 22 Jul 2017 02:19:57 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/rnn/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Predict Stock Prices Using Rnn Part 2</title>
      <link>http://localhost:1313/post/2017-07-22-stock-rnn-part-2/predict-stock-prices-using-rnn-part2/</link>
      <pubDate>Sat, 22 Jul 2017 02:19:57 +0800</pubDate>
      <guid>http://localhost:1313/post/2017-07-22-stock-rnn-part-2/predict-stock-prices-using-rnn-part2/</guid>
      <description>&lt;p&gt;In the Part 2 tutorial, I would like to continue the topic on stock price prediction and to endow the recurrent neural network that I have built in &lt;a href=&#34;https://jarvisma.xyz/post/2017-07-08-stock-rnn-part-1/predict-stock-prices-using-rnn-part1/&#34;&gt;Part 1&lt;/a&gt; with the capability of responding to multiple stocks. In order to distinguish the patterns associated with different price sequences, I use the stock symbol embedding vectors as part of the input.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;dataset&#34;&gt;Dataset&lt;/h2&gt;
&lt;p&gt;During the search, I found &lt;a href=&#34;https://github.com/lukaszbanasiak/yahoo-finance&#34;&gt;this library&lt;/a&gt; for querying Yahoo! Finance API. It would be very useful if Yahoo hasn’t shut down the historical data fetch API. You may find it useful for querying other information though. Here I pick the Google Finance link, among &lt;a href=&#34;https://www.quantshare.com/sa-43-10-ways-to-download-historical-stock-quotes-data-for-free&#34;&gt;a couple of free data sources&lt;/a&gt; for downloading historical stock prices.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Predict Stock Prices Using Rnn Part 1</title>
      <link>http://localhost:1313/post/2017-07-08-stock-rnn-part-1/predict-stock-prices-using-rnn-part1/</link>
      <pubDate>Sat, 08 Jul 2017 18:18:57 +0800</pubDate>
      <guid>http://localhost:1313/post/2017-07-08-stock-rnn-part-1/predict-stock-prices-using-rnn-part1/</guid>
      <description>&lt;p&gt;This is a tutorial for how to build a recurrent neural network using Tensorflow to predict stock market prices. If you don’t know what is recurrent neural network or LSTM cell, feel free to check &lt;a href=&#34;https://jarvisma.xyz/posts/an-overview-of-deep-learning-for-curious-people/#recurrent-neural-network&#34;&gt;my previous post&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One thing I would like to emphasize that because my motivation for writing this post is more on demonstrating how to build and train an RNN model in Tensorflow and less on solve the stock prediction problem, I didn’t try hard on improving the prediction outcomes. You are more than welcome to take my code as a reference point and add more stock prediction related ideas to improve it. Enjoy!&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
